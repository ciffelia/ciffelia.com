---
import waveMaskSvg from "./waveMask.svg?raw";

export interface Props {
  animation: WaveAnimationParams;
}

export interface WaveAnimationParams {
  from: number;
  to: number;
  duration: `${number}s`;
  delay: `${number}s`;
}

const waveMaskImage = `url("data:image/svg+xml,${encodeURIComponent(
  waveMaskSvg,
)}")`;

const {
  animation: { from, to, duration, delay },
} = Astro.props;
---

<div class="wave"></div>

<style
  define:vars={{
    waveMaskImage,
    from,
    to,
    duration,
    delay,
  }}
>
  @keyframes wave {
    0% {
      mask-position: calc(600px * var(--from)) 0;
    }
    100% {
      mask-position: calc(600px * var(--to)) 0;
    }
  }

  .wave {
    container-type: inline-size;
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: var(--color-background1);
    mask-image: var(--waveMaskImage);
    mask-size: auto 100%;
    mask-repeat: repeat-x;
    animation: wave var(--duration) cubic-bezier(0.37, 0, 0.63, 1) var(--delay)
      alternate infinite;
  }

  @media (prefers-reduced-motion: reduce) {
    .wave {
      animation-play-state: paused;
    }
  }
</style>
